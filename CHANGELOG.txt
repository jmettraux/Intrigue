
= Intrigue


== release 1.1.0    not yet released

- implement "alist?"
- implement "all?" and "length"
- parse JSON as well (and run make-jobject)
- let "apply" accept strings as first argument
- fix semi-colons eaten by symbols
- rename FunctionNode to PrimitiveNode
- prevent "cons" from mutating lists (instead of creating new lists)
- make some functions as library functions


== release 1.0.4    released 2013/02/12

- implement "apply"
- let "define" accept dynamic function names
- unlock (lambda (head . tail) ...)
- unlock direct use of lambdas
- unlock single symbol argument for lambdas (list)
- implement "gcd"
- implement "quotient", "remainder" and "modulo"
- implement "abs"
- implement "min" and "max"
- implement "odd?" and "even?"
- implement "zero?", "positive?" and "negative?"
- implement "exact?" and "inexact?"
- implement "exact->inexact" and "inexact->exact"
- implement "string?"
- alias #t and #f for true and false
- implement "number?" and "boolean?"
- implement "symbol->string" and "->string"
- support floats (well, doubles)
- implement "*" and "/"


== release 1.0.3    released 2013/01/31

- make #To{Atom|List|Symbol|Function}Node more verbose in case of failure
- implement Node#ToInteger
- implement "-"
- implement "set!"
- implement "and", "or" and "not"
- implement "null?"


== release 1.0.2    released 2013/01/29

- allow for more than one expression in "lambda" body
- fix "quote"
- implement "list"
- implement "make-environment"


== release 1.0.1    released 2013/01/28

- introduce libs/ core libraries


== release 1.0.0    released 2013/01/24

- extended "less brackets" mode
- switched to ; for comments (be a good Scheme)


== release 0.9.0    released 2013/01/22

- initial release

