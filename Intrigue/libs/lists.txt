
;
; list related functions
;

;
; caar and co

define (caar li) (car (car li))

;
; list

define (list . l) l

;
; foldr

  ; TODO: move that to a[n iterating] primitive

define
  foldr fu la li
  if (empty? li)
    la
    fu (car li) (foldr fu la (cdr li))

;
; foldl

  ; TODO: move that to a[n iterating] primitive

define
  foldl fu ac li
  if (empty? li)
    ac
    foldl fu (fu (car li) ac) (cdr li)

;
; length

define
  length li
  foldl (lambda (elt acc) (+ acc 1)) 0 li

;
; all?

define
  all? fu? li
  cond
    (empty? li) true
    (fu? (car li)) (all? fu? (cdr li))
    (true false)

;
; map

;define
;  map fu li
;  if (empty? li)
;    li    ; then
;    cons  ; else
;      fu (car li)
;      map fu (cdr li)

define
  map fu li
  foldr (lambda (x y) (cons (fu x) y)) '() li
